// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at
// 2022-01-05 08:48:18.528313 +0100 CET m=+0.001212717
// using data from
// [../gen/stopwords_de.json ../gen/stopwords_en.json]
package tokenizer

//IsEnglishStopWord returns true if word is stop word
func IsEnglishStopWord(word string) bool {
	switch word {
		case "0o":
			return true
		case "0s":
			return true
		case "3a":
			return true
		case "3b":
			return true
		case "3d":
			return true
		case "6b":
			return true
		case "6o":
			return true
		case "a":
			return true
		case "a1":
			return true
		case "a2":
			return true
		case "a3":
			return true
		case "a4":
			return true
		case "ab":
			return true
		case "able":
			return true
		case "about":
			return true
		case "above":
			return true
		case "abst":
			return true
		case "ac":
			return true
		case "accordance":
			return true
		case "according":
			return true
		case "accordingly":
			return true
		case "across":
			return true
		case "act":
			return true
		case "actually":
			return true
		case "ad":
			return true
		case "added":
			return true
		case "adj":
			return true
		case "ae":
			return true
		case "af":
			return true
		case "affected":
			return true
		case "affecting":
			return true
		case "affects":
			return true
		case "after":
			return true
		case "afterwards":
			return true
		case "ag":
			return true
		case "again":
			return true
		case "against":
			return true
		case "ah":
			return true
		case "ain":
			return true
		case "ain't":
			return true
		case "aj":
			return true
		case "al":
			return true
		case "all":
			return true
		case "allow":
			return true
		case "allows":
			return true
		case "almost":
			return true
		case "alone":
			return true
		case "along":
			return true
		case "already":
			return true
		case "also":
			return true
		case "although":
			return true
		case "always":
			return true
		case "am":
			return true
		case "among":
			return true
		case "amongst":
			return true
		case "amoungst":
			return true
		case "amount":
			return true
		case "an":
			return true
		case "and":
			return true
		case "announce":
			return true
		case "another":
			return true
		case "any":
			return true
		case "anybody":
			return true
		case "anyhow":
			return true
		case "anymore":
			return true
		case "anyone":
			return true
		case "anything":
			return true
		case "anyway":
			return true
		case "anyways":
			return true
		case "anywhere":
			return true
		case "ao":
			return true
		case "ap":
			return true
		case "apart":
			return true
		case "apparently":
			return true
		case "appear":
			return true
		case "appreciate":
			return true
		case "appropriate":
			return true
		case "approximately":
			return true
		case "ar":
			return true
		case "are":
			return true
		case "aren":
			return true
		case "arent":
			return true
		case "aren't":
			return true
		case "arise":
			return true
		case "around":
			return true
		case "as":
			return true
		case "a's":
			return true
		case "aside":
			return true
		case "ask":
			return true
		case "asking":
			return true
		case "associated":
			return true
		case "at":
			return true
		case "au":
			return true
		case "auth":
			return true
		case "av":
			return true
		case "available":
			return true
		case "aw":
			return true
		case "away":
			return true
		case "awfully":
			return true
		case "ax":
			return true
		case "ay":
			return true
		case "az":
			return true
		case "b":
			return true
		case "b1":
			return true
		case "b2":
			return true
		case "b3":
			return true
		case "ba":
			return true
		case "back":
			return true
		case "bc":
			return true
		case "bd":
			return true
		case "be":
			return true
		case "became":
			return true
		case "because":
			return true
		case "become":
			return true
		case "becomes":
			return true
		case "becoming":
			return true
		case "been":
			return true
		case "before":
			return true
		case "beforehand":
			return true
		case "begin":
			return true
		case "beginning":
			return true
		case "beginnings":
			return true
		case "begins":
			return true
		case "behind":
			return true
		case "being":
			return true
		case "believe":
			return true
		case "below":
			return true
		case "beside":
			return true
		case "besides":
			return true
		case "best":
			return true
		case "better":
			return true
		case "between":
			return true
		case "beyond":
			return true
		case "bi":
			return true
		case "bill":
			return true
		case "biol":
			return true
		case "bj":
			return true
		case "bk":
			return true
		case "bl":
			return true
		case "bn":
			return true
		case "both":
			return true
		case "bottom":
			return true
		case "bp":
			return true
		case "br":
			return true
		case "brief":
			return true
		case "briefly":
			return true
		case "bs":
			return true
		case "bt":
			return true
		case "bu":
			return true
		case "but":
			return true
		case "bx":
			return true
		case "by":
			return true
		case "c":
			return true
		case "c1":
			return true
		case "c2":
			return true
		case "c3":
			return true
		case "ca":
			return true
		case "call":
			return true
		case "came":
			return true
		case "can":
			return true
		case "cannot":
			return true
		case "cant":
			return true
		case "can't":
			return true
		case "cause":
			return true
		case "causes":
			return true
		case "cc":
			return true
		case "cd":
			return true
		case "ce":
			return true
		case "certain":
			return true
		case "certainly":
			return true
		case "cf":
			return true
		case "cg":
			return true
		case "ch":
			return true
		case "changes":
			return true
		case "ci":
			return true
		case "cit":
			return true
		case "cj":
			return true
		case "cl":
			return true
		case "clearly":
			return true
		case "cm":
			return true
		case "c'mon":
			return true
		case "cn":
			return true
		case "co":
			return true
		case "com":
			return true
		case "come":
			return true
		case "comes":
			return true
		case "con":
			return true
		case "concerning":
			return true
		case "consequently":
			return true
		case "consider":
			return true
		case "considering":
			return true
		case "contain":
			return true
		case "containing":
			return true
		case "contains":
			return true
		case "corresponding":
			return true
		case "could":
			return true
		case "couldn":
			return true
		case "couldnt":
			return true
		case "couldn't":
			return true
		case "course":
			return true
		case "cp":
			return true
		case "cq":
			return true
		case "cr":
			return true
		case "cry":
			return true
		case "cs":
			return true
		case "c's":
			return true
		case "ct":
			return true
		case "cu":
			return true
		case "currently":
			return true
		case "cv":
			return true
		case "cx":
			return true
		case "cy":
			return true
		case "cz":
			return true
		case "d":
			return true
		case "d2":
			return true
		case "da":
			return true
		case "date":
			return true
		case "dc":
			return true
		case "dd":
			return true
		case "de":
			return true
		case "definitely":
			return true
		case "describe":
			return true
		case "described":
			return true
		case "despite":
			return true
		case "detail":
			return true
		case "df":
			return true
		case "di":
			return true
		case "did":
			return true
		case "didn":
			return true
		case "didn't":
			return true
		case "different":
			return true
		case "dj":
			return true
		case "dk":
			return true
		case "dl":
			return true
		case "do":
			return true
		case "does":
			return true
		case "doesn":
			return true
		case "doesn't":
			return true
		case "doing":
			return true
		case "don":
			return true
		case "done":
			return true
		case "don't":
			return true
		case "down":
			return true
		case "downwards":
			return true
		case "dp":
			return true
		case "dr":
			return true
		case "ds":
			return true
		case "dt":
			return true
		case "du":
			return true
		case "due":
			return true
		case "during":
			return true
		case "dx":
			return true
		case "dy":
			return true
		case "e":
			return true
		case "e2":
			return true
		case "e3":
			return true
		case "ea":
			return true
		case "each":
			return true
		case "ec":
			return true
		case "ed":
			return true
		case "edu":
			return true
		case "ee":
			return true
		case "ef":
			return true
		case "effect":
			return true
		case "eg":
			return true
		case "ei":
			return true
		case "eight":
			return true
		case "eighty":
			return true
		case "either":
			return true
		case "ej":
			return true
		case "el":
			return true
		case "eleven":
			return true
		case "else":
			return true
		case "elsewhere":
			return true
		case "em":
			return true
		case "empty":
			return true
		case "en":
			return true
		case "end":
			return true
		case "ending":
			return true
		case "enough":
			return true
		case "entirely":
			return true
		case "eo":
			return true
		case "ep":
			return true
		case "eq":
			return true
		case "er":
			return true
		case "es":
			return true
		case "especially":
			return true
		case "est":
			return true
		case "et":
			return true
		case "et-al":
			return true
		case "etc":
			return true
		case "eu":
			return true
		case "ev":
			return true
		case "even":
			return true
		case "ever":
			return true
		case "every":
			return true
		case "everybody":
			return true
		case "everyone":
			return true
		case "everything":
			return true
		case "everywhere":
			return true
		case "ex":
			return true
		case "exactly":
			return true
		case "example":
			return true
		case "except":
			return true
		case "ey":
			return true
		case "f":
			return true
		case "f2":
			return true
		case "fa":
			return true
		case "far":
			return true
		case "fc":
			return true
		case "few":
			return true
		case "ff":
			return true
		case "fi":
			return true
		case "fifteen":
			return true
		case "fifth":
			return true
		case "fify":
			return true
		case "fill":
			return true
		case "find":
			return true
		case "fire":
			return true
		case "first":
			return true
		case "five":
			return true
		case "fix":
			return true
		case "fj":
			return true
		case "fl":
			return true
		case "fn":
			return true
		case "fo":
			return true
		case "followed":
			return true
		case "following":
			return true
		case "follows":
			return true
		case "for":
			return true
		case "former":
			return true
		case "formerly":
			return true
		case "forth":
			return true
		case "forty":
			return true
		case "found":
			return true
		case "four":
			return true
		case "fr":
			return true
		case "from":
			return true
		case "front":
			return true
		case "fs":
			return true
		case "ft":
			return true
		case "fu":
			return true
		case "full":
			return true
		case "further":
			return true
		case "furthermore":
			return true
		case "fy":
			return true
		case "g":
			return true
		case "ga":
			return true
		case "gave":
			return true
		case "ge":
			return true
		case "get":
			return true
		case "gets":
			return true
		case "getting":
			return true
		case "gi":
			return true
		case "give":
			return true
		case "given":
			return true
		case "gives":
			return true
		case "giving":
			return true
		case "gj":
			return true
		case "gl":
			return true
		case "go":
			return true
		case "goes":
			return true
		case "going":
			return true
		case "gone":
			return true
		case "got":
			return true
		case "gotten":
			return true
		case "gr":
			return true
		case "greetings":
			return true
		case "gs":
			return true
		case "gy":
			return true
		case "h":
			return true
		case "h2":
			return true
		case "h3":
			return true
		case "had":
			return true
		case "hadn":
			return true
		case "hadn't":
			return true
		case "happens":
			return true
		case "hardly":
			return true
		case "has":
			return true
		case "hasn":
			return true
		case "hasnt":
			return true
		case "hasn't":
			return true
		case "have":
			return true
		case "haven":
			return true
		case "haven't":
			return true
		case "having":
			return true
		case "he":
			return true
		case "hed":
			return true
		case "he'd":
			return true
		case "he'll":
			return true
		case "hello":
			return true
		case "help":
			return true
		case "hence":
			return true
		case "her":
			return true
		case "here":
			return true
		case "hereafter":
			return true
		case "hereby":
			return true
		case "herein":
			return true
		case "heres":
			return true
		case "here's":
			return true
		case "hereupon":
			return true
		case "hers":
			return true
		case "herself":
			return true
		case "hes":
			return true
		case "he's":
			return true
		case "hh":
			return true
		case "hi":
			return true
		case "hid":
			return true
		case "him":
			return true
		case "himself":
			return true
		case "his":
			return true
		case "hither":
			return true
		case "hj":
			return true
		case "ho":
			return true
		case "home":
			return true
		case "hopefully":
			return true
		case "how":
			return true
		case "howbeit":
			return true
		case "however":
			return true
		case "how's":
			return true
		case "hr":
			return true
		case "hs":
			return true
		case "http":
			return true
		case "https":
			return true
		case "hu":
			return true
		case "hundred":
			return true
		case "hy":
			return true
		case "i":
			return true
		case "i2":
			return true
		case "i3":
			return true
		case "i4":
			return true
		case "i6":
			return true
		case "i7":
			return true
		case "i8":
			return true
		case "ia":
			return true
		case "ib":
			return true
		case "ibid":
			return true
		case "ic":
			return true
		case "id":
			return true
		case "i'd":
			return true
		case "ie":
			return true
		case "if":
			return true
		case "ig":
			return true
		case "ignored":
			return true
		case "ih":
			return true
		case "ii":
			return true
		case "ij":
			return true
		case "il":
			return true
		case "i'll":
			return true
		case "im":
			return true
		case "i'm":
			return true
		case "immediate":
			return true
		case "immediately":
			return true
		case "importance":
			return true
		case "important":
			return true
		case "in":
			return true
		case "inasmuch":
			return true
		case "inc":
			return true
		case "indeed":
			return true
		case "index":
			return true
		case "indicate":
			return true
		case "indicated":
			return true
		case "indicates":
			return true
		case "information":
			return true
		case "inner":
			return true
		case "insofar":
			return true
		case "instead":
			return true
		case "interest":
			return true
		case "into":
			return true
		case "invention":
			return true
		case "inward":
			return true
		case "io":
			return true
		case "ip":
			return true
		case "iq":
			return true
		case "ir":
			return true
		case "is":
			return true
		case "isn":
			return true
		case "isn't":
			return true
		case "it":
			return true
		case "itd":
			return true
		case "it'd":
			return true
		case "it'll":
			return true
		case "its":
			return true
		case "it's":
			return true
		case "itself":
			return true
		case "iv":
			return true
		case "i've":
			return true
		case "ix":
			return true
		case "iy":
			return true
		case "iz":
			return true
		case "j":
			return true
		case "jj":
			return true
		case "jr":
			return true
		case "js":
			return true
		case "jt":
			return true
		case "ju":
			return true
		case "just":
			return true
		case "k":
			return true
		case "ke":
			return true
		case "keep":
			return true
		case "keeps":
			return true
		case "kept":
			return true
		case "kg":
			return true
		case "kj":
			return true
		case "km":
			return true
		case "know":
			return true
		case "known":
			return true
		case "knows":
			return true
		case "ko":
			return true
		case "l":
			return true
		case "l2":
			return true
		case "la":
			return true
		case "largely":
			return true
		case "last":
			return true
		case "lately":
			return true
		case "later":
			return true
		case "latter":
			return true
		case "latterly":
			return true
		case "lb":
			return true
		case "lc":
			return true
		case "le":
			return true
		case "least":
			return true
		case "les":
			return true
		case "less":
			return true
		case "lest":
			return true
		case "let":
			return true
		case "lets":
			return true
		case "let's":
			return true
		case "lf":
			return true
		case "like":
			return true
		case "liked":
			return true
		case "likely":
			return true
		case "line":
			return true
		case "little":
			return true
		case "lj":
			return true
		case "ll":
			return true
		case "ln":
			return true
		case "lo":
			return true
		case "look":
			return true
		case "looking":
			return true
		case "looks":
			return true
		case "los":
			return true
		case "lr":
			return true
		case "ls":
			return true
		case "lt":
			return true
		case "ltd":
			return true
		case "m":
			return true
		case "m2":
			return true
		case "ma":
			return true
		case "made":
			return true
		case "mainly":
			return true
		case "make":
			return true
		case "makes":
			return true
		case "many":
			return true
		case "may":
			return true
		case "maybe":
			return true
		case "me":
			return true
		case "mean":
			return true
		case "means":
			return true
		case "meantime":
			return true
		case "meanwhile":
			return true
		case "merely":
			return true
		case "mg":
			return true
		case "might":
			return true
		case "mightn":
			return true
		case "mightn't":
			return true
		case "mill":
			return true
		case "million":
			return true
		case "mine":
			return true
		case "miss":
			return true
		case "ml":
			return true
		case "mn":
			return true
		case "mo":
			return true
		case "more":
			return true
		case "moreover":
			return true
		case "most":
			return true
		case "mostly":
			return true
		case "move":
			return true
		case "mr":
			return true
		case "mrs":
			return true
		case "ms":
			return true
		case "mt":
			return true
		case "mu":
			return true
		case "much":
			return true
		case "mug":
			return true
		case "must":
			return true
		case "mustn":
			return true
		case "mustn't":
			return true
		case "my":
			return true
		case "myself":
			return true
		case "n":
			return true
		case "n2":
			return true
		case "na":
			return true
		case "name":
			return true
		case "namely":
			return true
		case "nay":
			return true
		case "nc":
			return true
		case "nd":
			return true
		case "ne":
			return true
		case "near":
			return true
		case "nearly":
			return true
		case "necessarily":
			return true
		case "necessary":
			return true
		case "need":
			return true
		case "needn":
			return true
		case "needn't":
			return true
		case "needs":
			return true
		case "neither":
			return true
		case "never":
			return true
		case "nevertheless":
			return true
		case "new":
			return true
		case "next":
			return true
		case "ng":
			return true
		case "ni":
			return true
		case "nine":
			return true
		case "ninety":
			return true
		case "nj":
			return true
		case "nl":
			return true
		case "nn":
			return true
		case "no":
			return true
		case "nobody":
			return true
		case "non":
			return true
		case "none":
			return true
		case "nonetheless":
			return true
		case "noone":
			return true
		case "nor":
			return true
		case "normally":
			return true
		case "nos":
			return true
		case "not":
			return true
		case "noted":
			return true
		case "nothing":
			return true
		case "novel":
			return true
		case "now":
			return true
		case "nowhere":
			return true
		case "nr":
			return true
		case "ns":
			return true
		case "nt":
			return true
		case "ny":
			return true
		case "o":
			return true
		case "oa":
			return true
		case "ob":
			return true
		case "obtain":
			return true
		case "obtained":
			return true
		case "obviously":
			return true
		case "oc":
			return true
		case "od":
			return true
		case "of":
			return true
		case "off":
			return true
		case "often":
			return true
		case "og":
			return true
		case "oh":
			return true
		case "oi":
			return true
		case "oj":
			return true
		case "ok":
			return true
		case "okay":
			return true
		case "ol":
			return true
		case "old":
			return true
		case "om":
			return true
		case "omitted":
			return true
		case "on":
			return true
		case "once":
			return true
		case "one":
			return true
		case "ones":
			return true
		case "only":
			return true
		case "onto":
			return true
		case "oo":
			return true
		case "op":
			return true
		case "oq":
			return true
		case "or":
			return true
		case "ord":
			return true
		case "os":
			return true
		case "ot":
			return true
		case "other":
			return true
		case "others":
			return true
		case "otherwise":
			return true
		case "ou":
			return true
		case "ought":
			return true
		case "our":
			return true
		case "ours":
			return true
		case "ourselves":
			return true
		case "out":
			return true
		case "outside":
			return true
		case "over":
			return true
		case "overall":
			return true
		case "ow":
			return true
		case "owing":
			return true
		case "own":
			return true
		case "ox":
			return true
		case "oz":
			return true
		case "p":
			return true
		case "p1":
			return true
		case "p2":
			return true
		case "p3":
			return true
		case "page":
			return true
		case "pagecount":
			return true
		case "pages":
			return true
		case "par":
			return true
		case "part":
			return true
		case "particular":
			return true
		case "particularly":
			return true
		case "pas":
			return true
		case "past":
			return true
		case "pc":
			return true
		case "pd":
			return true
		case "pe":
			return true
		case "per":
			return true
		case "perhaps":
			return true
		case "pf":
			return true
		case "ph":
			return true
		case "pi":
			return true
		case "pj":
			return true
		case "pk":
			return true
		case "pl":
			return true
		case "placed":
			return true
		case "please":
			return true
		case "plus":
			return true
		case "pm":
			return true
		case "pn":
			return true
		case "po":
			return true
		case "poorly":
			return true
		case "possible":
			return true
		case "possibly":
			return true
		case "potentially":
			return true
		case "pp":
			return true
		case "pq":
			return true
		case "pr":
			return true
		case "predominantly":
			return true
		case "present":
			return true
		case "presumably":
			return true
		case "previously":
			return true
		case "primarily":
			return true
		case "probably":
			return true
		case "promptly":
			return true
		case "proud":
			return true
		case "provides":
			return true
		case "ps":
			return true
		case "pt":
			return true
		case "pu":
			return true
		case "put":
			return true
		case "py":
			return true
		case "q":
			return true
		case "qj":
			return true
		case "qu":
			return true
		case "que":
			return true
		case "quickly":
			return true
		case "quite":
			return true
		case "qv":
			return true
		case "r":
			return true
		case "r2":
			return true
		case "ra":
			return true
		case "ran":
			return true
		case "rather":
			return true
		case "rc":
			return true
		case "rd":
			return true
		case "re":
			return true
		case "readily":
			return true
		case "really":
			return true
		case "reasonably":
			return true
		case "recent":
			return true
		case "recently":
			return true
		case "ref":
			return true
		case "refs":
			return true
		case "regarding":
			return true
		case "regardless":
			return true
		case "regards":
			return true
		case "related":
			return true
		case "relatively":
			return true
		case "research":
			return true
		case "research-articl":
			return true
		case "respectively":
			return true
		case "resulted":
			return true
		case "resulting":
			return true
		case "results":
			return true
		case "rf":
			return true
		case "rh":
			return true
		case "ri":
			return true
		case "right":
			return true
		case "rj":
			return true
		case "rl":
			return true
		case "rm":
			return true
		case "rn":
			return true
		case "ro":
			return true
		case "rq":
			return true
		case "rr":
			return true
		case "rs":
			return true
		case "rt":
			return true
		case "ru":
			return true
		case "run":
			return true
		case "rv":
			return true
		case "ry":
			return true
		case "s":
			return true
		case "s2":
			return true
		case "sa":
			return true
		case "said":
			return true
		case "same":
			return true
		case "saw":
			return true
		case "say":
			return true
		case "saying":
			return true
		case "says":
			return true
		case "sc":
			return true
		case "sd":
			return true
		case "se":
			return true
		case "sec":
			return true
		case "second":
			return true
		case "secondly":
			return true
		case "section":
			return true
		case "see":
			return true
		case "seeing":
			return true
		case "seem":
			return true
		case "seemed":
			return true
		case "seeming":
			return true
		case "seems":
			return true
		case "seen":
			return true
		case "self":
			return true
		case "selves":
			return true
		case "sensible":
			return true
		case "sent":
			return true
		case "serious":
			return true
		case "seriously":
			return true
		case "seven":
			return true
		case "several":
			return true
		case "sf":
			return true
		case "shall":
			return true
		case "shan":
			return true
		case "shan't":
			return true
		case "she":
			return true
		case "shed":
			return true
		case "she'd":
			return true
		case "she'll":
			return true
		case "shes":
			return true
		case "she's":
			return true
		case "should":
			return true
		case "shouldn":
			return true
		case "shouldn't":
			return true
		case "should've":
			return true
		case "show":
			return true
		case "showed":
			return true
		case "shown":
			return true
		case "showns":
			return true
		case "shows":
			return true
		case "si":
			return true
		case "side":
			return true
		case "significant":
			return true
		case "significantly":
			return true
		case "similar":
			return true
		case "similarly":
			return true
		case "since":
			return true
		case "sincere":
			return true
		case "six":
			return true
		case "sixty":
			return true
		case "sj":
			return true
		case "sl":
			return true
		case "slightly":
			return true
		case "sm":
			return true
		case "sn":
			return true
		case "so":
			return true
		case "some":
			return true
		case "somebody":
			return true
		case "somehow":
			return true
		case "someone":
			return true
		case "somethan":
			return true
		case "something":
			return true
		case "sometime":
			return true
		case "sometimes":
			return true
		case "somewhat":
			return true
		case "somewhere":
			return true
		case "soon":
			return true
		case "sorry":
			return true
		case "sp":
			return true
		case "specifically":
			return true
		case "specified":
			return true
		case "specify":
			return true
		case "specifying":
			return true
		case "sq":
			return true
		case "sr":
			return true
		case "ss":
			return true
		case "st":
			return true
		case "still":
			return true
		case "stop":
			return true
		case "strongly":
			return true
		case "sub":
			return true
		case "substantially":
			return true
		case "successfully":
			return true
		case "such":
			return true
		case "sufficiently":
			return true
		case "suggest":
			return true
		case "sup":
			return true
		case "sure":
			return true
		case "sy":
			return true
		case "system":
			return true
		case "sz":
			return true
		case "t":
			return true
		case "t1":
			return true
		case "t2":
			return true
		case "t3":
			return true
		case "take":
			return true
		case "taken":
			return true
		case "taking":
			return true
		case "tb":
			return true
		case "tc":
			return true
		case "td":
			return true
		case "te":
			return true
		case "tell":
			return true
		case "ten":
			return true
		case "tends":
			return true
		case "tf":
			return true
		case "th":
			return true
		case "than":
			return true
		case "thank":
			return true
		case "thanks":
			return true
		case "thanx":
			return true
		case "that":
			return true
		case "that'll":
			return true
		case "thats":
			return true
		case "that's":
			return true
		case "that've":
			return true
		case "the":
			return true
		case "their":
			return true
		case "theirs":
			return true
		case "them":
			return true
		case "themselves":
			return true
		case "then":
			return true
		case "thence":
			return true
		case "there":
			return true
		case "thereafter":
			return true
		case "thereby":
			return true
		case "thered":
			return true
		case "therefore":
			return true
		case "therein":
			return true
		case "there'll":
			return true
		case "thereof":
			return true
		case "therere":
			return true
		case "theres":
			return true
		case "there's":
			return true
		case "thereto":
			return true
		case "thereupon":
			return true
		case "there've":
			return true
		case "these":
			return true
		case "they":
			return true
		case "theyd":
			return true
		case "they'd":
			return true
		case "they'll":
			return true
		case "theyre":
			return true
		case "they're":
			return true
		case "they've":
			return true
		case "thickv":
			return true
		case "thin":
			return true
		case "think":
			return true
		case "third":
			return true
		case "this":
			return true
		case "thorough":
			return true
		case "thoroughly":
			return true
		case "those":
			return true
		case "thou":
			return true
		case "though":
			return true
		case "thoughh":
			return true
		case "thousand":
			return true
		case "three":
			return true
		case "throug":
			return true
		case "through":
			return true
		case "throughout":
			return true
		case "thru":
			return true
		case "thus":
			return true
		case "ti":
			return true
		case "til":
			return true
		case "tip":
			return true
		case "tj":
			return true
		case "tl":
			return true
		case "tm":
			return true
		case "tn":
			return true
		case "to":
			return true
		case "together":
			return true
		case "too":
			return true
		case "took":
			return true
		case "top":
			return true
		case "toward":
			return true
		case "towards":
			return true
		case "tp":
			return true
		case "tq":
			return true
		case "tr":
			return true
		case "tried":
			return true
		case "tries":
			return true
		case "truly":
			return true
		case "try":
			return true
		case "trying":
			return true
		case "ts":
			return true
		case "t's":
			return true
		case "tt":
			return true
		case "tv":
			return true
		case "twelve":
			return true
		case "twenty":
			return true
		case "twice":
			return true
		case "two":
			return true
		case "tx":
			return true
		case "u":
			return true
		case "u201d":
			return true
		case "ue":
			return true
		case "ui":
			return true
		case "uj":
			return true
		case "uk":
			return true
		case "um":
			return true
		case "un":
			return true
		case "under":
			return true
		case "unfortunately":
			return true
		case "unless":
			return true
		case "unlike":
			return true
		case "unlikely":
			return true
		case "until":
			return true
		case "unto":
			return true
		case "uo":
			return true
		case "up":
			return true
		case "upon":
			return true
		case "ups":
			return true
		case "ur":
			return true
		case "us":
			return true
		case "use":
			return true
		case "used":
			return true
		case "useful":
			return true
		case "usefully":
			return true
		case "usefulness":
			return true
		case "uses":
			return true
		case "using":
			return true
		case "usually":
			return true
		case "ut":
			return true
		case "v":
			return true
		case "va":
			return true
		case "value":
			return true
		case "various":
			return true
		case "vd":
			return true
		case "ve":
			return true
		case "very":
			return true
		case "via":
			return true
		case "viz":
			return true
		case "vj":
			return true
		case "vo":
			return true
		case "vol":
			return true
		case "vols":
			return true
		case "volumtype":
			return true
		case "vq":
			return true
		case "vs":
			return true
		case "vt":
			return true
		case "vu":
			return true
		case "w":
			return true
		case "wa":
			return true
		case "want":
			return true
		case "wants":
			return true
		case "was":
			return true
		case "wasn":
			return true
		case "wasnt":
			return true
		case "wasn't":
			return true
		case "way":
			return true
		case "we":
			return true
		case "wed":
			return true
		case "we'd":
			return true
		case "welcome":
			return true
		case "well":
			return true
		case "we'll":
			return true
		case "well-b":
			return true
		case "went":
			return true
		case "were":
			return true
		case "we're":
			return true
		case "weren":
			return true
		case "werent":
			return true
		case "weren't":
			return true
		case "we've":
			return true
		case "what":
			return true
		case "whatever":
			return true
		case "what'll":
			return true
		case "whats":
			return true
		case "what's":
			return true
		case "when":
			return true
		case "whence":
			return true
		case "whenever":
			return true
		case "when's":
			return true
		case "where":
			return true
		case "whereafter":
			return true
		case "whereas":
			return true
		case "whereby":
			return true
		case "wherein":
			return true
		case "wheres":
			return true
		case "where's":
			return true
		case "whereupon":
			return true
		case "wherever":
			return true
		case "whether":
			return true
		case "which":
			return true
		case "while":
			return true
		case "whim":
			return true
		case "whither":
			return true
		case "who":
			return true
		case "whod":
			return true
		case "whoever":
			return true
		case "whole":
			return true
		case "who'll":
			return true
		case "whom":
			return true
		case "whomever":
			return true
		case "whos":
			return true
		case "who's":
			return true
		case "whose":
			return true
		case "why":
			return true
		case "why's":
			return true
		case "wi":
			return true
		case "widely":
			return true
		case "will":
			return true
		case "willing":
			return true
		case "wish":
			return true
		case "with":
			return true
		case "within":
			return true
		case "without":
			return true
		case "wo":
			return true
		case "won":
			return true
		case "wonder":
			return true
		case "wont":
			return true
		case "won't":
			return true
		case "words":
			return true
		case "world":
			return true
		case "would":
			return true
		case "wouldn":
			return true
		case "wouldnt":
			return true
		case "wouldn't":
			return true
		case "www":
			return true
		case "x":
			return true
		case "x1":
			return true
		case "x2":
			return true
		case "x3":
			return true
		case "xf":
			return true
		case "xi":
			return true
		case "xj":
			return true
		case "xk":
			return true
		case "xl":
			return true
		case "xn":
			return true
		case "xo":
			return true
		case "xs":
			return true
		case "xt":
			return true
		case "xv":
			return true
		case "xx":
			return true
		case "y":
			return true
		case "y2":
			return true
		case "yes":
			return true
		case "yet":
			return true
		case "yj":
			return true
		case "yl":
			return true
		case "you":
			return true
		case "youd":
			return true
		case "you'd":
			return true
		case "you'll":
			return true
		case "your":
			return true
		case "youre":
			return true
		case "you're":
			return true
		case "yours":
			return true
		case "yourself":
			return true
		case "yourselves":
			return true
		case "you've":
			return true
		case "yr":
			return true
		case "ys":
			return true
		case "yt":
			return true
		case "z":
			return true
		case "zero":
			return true
		case "zi":
			return true
		case "zz":
			return true
		default:
			return false
	}
}

//IsGermanStopWord returns true if word is stop word
func IsGermanStopWord(word string) bool {
	switch word {
		case "jenen":
			return true
		case "manchem":
			return true
		case "euren":
			return true
		case "ihres":
			return true
		case "war":
			return true
		case "meinem":
			return true
		case "jeden":
			return true
		case "thirdparty":
			return true
		case "bei":
			return true
		case "manchen":
			return true
		case "ander":
			return true
		case "solchem":
			return true
		case "habe":
			return true
		case "koennen":
			return true
		case "den":
			return true
		case "anders":
			return true
		case "muss":
			return true
		case "haben":
			return true
		case "demselben":
			return true
		case "aus":
			return true
		case "in":
			return true
		case "allen":
			return true
		case "keinem":
			return true
		case "während":
			return true
		case "eurer":
			return true
		case "derer":
			return true
		case "anderem":
			return true
		case "nichts":
			return true
		case "instantarticles":
			return true
		case "jeder":
			return true
		case "ein":
			return true
		case "eine":
			return true
		case "solches":
			return true
		case "von":
			return true
		case "www":
			return true
		case "denselben":
			return true
		case "andere":
			return true
		case "indem":
			return true
		case "eurem":
			return true
		case "selbst":
			return true
		case "zum":
			return true
		case "poid":
			return true
		case "getrenderedemetriqcontent":
			return true
		case "auch":
			return true
		case "keinen":
			return true
		case "alle":
			return true
		case "cms":
			return true
		case "htm":
			return true
		case "welchen":
			return true
		case "deines":
			return true
		case "anderr":
			return true
		case "derselben":
			return true
		case "sollte":
			return true
		case "könnte":
			return true
		case "wirst":
			return true
		case "eures":
			return true
		case "fuer":
			return true
		case "meinen":
			return true
		case "wo":
			return true
		case "ihrer":
			return true
		case "man":
			return true
		case "dazu":
			return true
		case "der":
			return true
		case "euer":
			return true
		case "will":
			return true
		case "sehr":
			return true
		case "ob":
			return true
		case "dem":
			return true
		case "ins":
			return true
		case "aber":
			return true
		case "einen":
			return true
		case "sonst":
			return true
		case "was":
			return true
		case "manche":
			return true
		case "static":
			return true
		case "im":
			return true
		case "weiter":
			return true
		case "eines":
			return true
		case "mancher":
			return true
		case "wir":
			return true
		case "würden":
			return true
		case "derselbe":
			return true
		case "deinem":
			return true
		case "wie":
			return true
		case "wieder":
			return true
		case "seine":
			return true
		case "mich":
			return true
		case "hatten":
			return true
		case "hatte":
			return true
		case "jener":
			return true
		case "daß":
			return true
		case "embedded":
			return true
		case "und":
			return true
		case "seinen":
			return true
		case "uns":
			return true
		case "forum":
			return true
		case "thread":
			return true
		case "jedem":
			return true
		case "meiner":
			return true
		case "über":
			return true
		case "jetzt":
			return true
		case "diese":
			return true
		case "ich":
			return true
		case "keines":
			return true
		case "aller":
			return true
		case "durch":
			return true
		case "meine":
			return true
		case "damit":
			return true
		case "weg":
			return true
		case "sondern":
			return true
		case "unseren":
			return true
		case "wollte":
			return true
		case "widget":
			return true
		case "anderm":
			return true
		case "wuerden":
			return true
		case "als":
			return true
		case "unserem":
			return true
		case "da":
			return true
		case "ueber":
			return true
		case "waehrend":
			return true
		case "koennte":
			return true
		case "zwar":
			return true
		case "hab":
			return true
		case "wuerde":
			return true
		case "anderes":
			return true
		case "so":
			return true
		case "lightbox":
			return true
		case "dieselben":
			return true
		case "dein":
			return true
		case "diesen":
			return true
		case "alles":
			return true
		case "wollen":
			return true
		case "zur":
			return true
		case "kein":
			return true
		case "etwas":
			return true
		case "mit":
			return true
		case "an":
			return true
		case "jedes":
			return true
		case "deine":
			return true
		case "oder":
			return true
		case "dort":
			return true
		case "bis":
			return true
		case "einiges":
			return true
		case "kann":
			return true
		case "waren":
			return true
		case "hin":
			return true
		case "das":
			return true
		case "wenn":
			return true
		case "php":
			return true
		case "dies":
			return true
		case "ihre":
			return true
		case "euch":
			return true
		case "unter":
			return true
		case "anderer":
			return true
		case "solchen":
			return true
		case "für":
			return true
		case "jenem":
			return true
		case "hinter":
			return true
		case "welcher":
			return true
		case "dieses":
			return true
		case "wird":
			return true
		case "pid":
			return true
		case "doch":
			return true
		case "dieselbe":
			return true
		case "werde":
			return true
		case "noch":
			return true
		case "ihren":
			return true
		case "machen":
			return true
		case "jenes":
			return true
		case "einige":
			return true
		case "einigen":
			return true
		case "welchem":
			return true
		case "ist":
			return true
		case "jene":
			return true
		case "um":
			return true
		case "ihnen":
			return true
		case "html":
			return true
		case "jede":
			return true
		case "du":
			return true
		case "es":
			return true
		case "zwischen":
			return true
		case "einer":
			return true
		case "nach":
			return true
		case "anderen":
			return true
		case "dass":
			return true
		case "jsp":
			return true
		case "seinem":
			return true
		case "manches":
			return true
		case "unsere":
			return true
		case "gegen":
			return true
		case "iframe":
			return true
		case "https":
			return true
		case "ihrem":
			return true
		case "weil":
			return true
		case "ihn":
			return true
		case "werden":
			return true
		case "andern":
			return true
		case "keine":
			return true
		case "desselben":
			return true
		case "viel":
			return true
		case "downloads":
			return true
		case "bin":
			return true
		case "deinen":
			return true
		case "hat":
			return true
		case "gewesen":
			return true
		case "nicht":
			return true
		case "diesem":
			return true
		case "ohne":
			return true
		case "welches":
			return true
		case "einigem":
			return true
		case "dann":
			return true
		case "einig":
			return true
		case "tid":
			return true
		case "zu":
			return true
		case "einmal":
			return true
		case "seines":
			return true
		case "er":
			return true
		case "mir":
			return true
		case "auf":
			return true
		case "dessen":
			return true
		case "sid":
			return true
		case "mein":
			return true
		case "seiner":
			return true
		case "musste":
			return true
		case "nur":
			return true
		case "einiger":
			return true
		case "nun":
			return true
		case "dich":
			return true
		case "stats":
			return true
		case "deiner":
			return true
		case "welche":
			return true
		case "unseres":
			return true
		case "am":
			return true
		case "warst":
			return true
		case "bist":
			return true
		case "würde":
			return true
		case "solche":
			return true
		case "einem":
			return true
		case "denn":
			return true
		case "diff":
			return true
		case "also":
			return true
		case "sie":
			return true
		case "hier":
			return true
		case "ihr":
			return true
		case "vor":
			return true
		case "des":
			return true
		case "allem":
			return true
		case "keiner":
			return true
		case "unser":
			return true
		case "titel":
			return true
		case "sein":
			return true
		case "vom":
			return true
		case "widgets":
			return true
		case "dieser":
			return true
		case "sind":
			return true
		case "meines":
			return true
		case "dir":
			return true
		case "eure":
			return true
		case "archiv":
			return true
		case "ihm":
			return true
		case "solcher":
			return true
		case "die":
			return true
		case "dasselbe":
			return true
		case "können":
			return true
		case "sich":
			return true
		case "http":
			return true
		case "soll":
			return true
		default:
			return false
	}
}
